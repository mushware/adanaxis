dnl Process this file with autoconf to produce a configure script.
AC_PREREQ(2.52)
AC_INIT(README)
AC_CANONICAL_HOST
AC_CANONICAL_TARGET

IC_MAJOR_VERSION=0
IC_MINOR_VERSION=1
IC_MICRO_VERSION=2
IC_VERSION=$IC_MAJOR_VERSION.$IC_MINOR_VERSION.$IC_MICRO_VERSION
IC_UNDERSCORE_VERSION=${IC_MAJOR_VERSION}_${IC_MINOR_VERSION}_${IC_MICRO_VERSION}

AC_SUBST(IC_MAJOR_VERSION)
AC_SUBST(IC_MINOR_VERSION)
AC_SUBST(IC_MICRO_VERSION)
AC_SUBST(IC_VERSION)
AC_SUBST(IC_UNDERSCORE_VERSION)

AM_INIT_AUTOMAKE(ic2,$IC_VERSION)
TOP_SUBDIRS="src ic2data"
AC_SUBST(TOP_SUBDIRS)
AM_CONFIG_HEADER(config.h)

SDL_EXTRA_LIBS=""

dnl Checks for programs.
AC_PROG_MAKE_SET
AC_PROG_CXX
AC_PROG_CXXCPP
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PATH_PROG(ac_prog_find, find)
AC_PATH_PROG(ac_prog_sdl_config, sdl-config)
if test "x$ac_prog_sdl_config" = "x"; then
    AC_PATH_PROG(ac_prog_sdl_config2, sdl11-config, "", [[$PATH:/usr/local/bin]])
    ac_prog_sdl_config="$ac_prog_sdl_config2"
fi
if test "x$ac_prog_sdl_config" = "x"; then
    AC_PATH_PROG(ac_prog_sdl_config3, sdl-config, "", [[/usr/local/bin]])
    ac_prog_sdl_config="$ac_prog_sdl_config3"
fi
if test "x$ac_prog_sdl_config" = "x"; then
    AC_MSG_NOTICE([Couldn't find sdl-config command.  Build probably doomed.])
else
    CPPFLAGS="$CPPFLAGS `$ac_prog_sdl_config --cflags`"
    LIBS="$LIBS `$ac_prog_sdl_config --libs`"
    
    AC_ARG_WITH(nosdlmain, [  --with-nosdlmain        Remove -lSDLmain from configure's tests], [    
        case "$LIBS" in
            *-lSDLmain*)
                SDL_EXTRA_LIBS="-lSDLmain"
                AC_MSG_NOTICE([Temporarily removed -lSDLmain from LIBS])
            ;;
        esac
    
        LIBS=`echo $LIBS | sed -e 's/-lSDLmain//'`
    ])

    AC_MSG_NOTICE([sdl-config set CPPFLAGS to $CPPFLAGS])
    AC_MSG_NOTICE([sdl-config set LIBS to $LIBS])
fi

CPPFLAGS="$CPPFLAGS -I\${srcdir}/Mushcore -I\${srcdir}/Mustl"

dnl Checks for libraries.
AC_CHECK_HEADER(windows.h)

AC_MSG_NOTICE([****************************************************************])
AC_MSG_NOTICE([*                                                              *])
AC_MSG_NOTICE([* Choosing a platform pack.  Please check that this is correct *])
AC_MSG_NOTICE([*                                                              *])
AC_MSG_NOTICE([****************************************************************])

dnl Get GL
case "$target" in
    powerpc-apple-darwin*)
        AC_MSG_NOTICE([* Assuming Darwin platform is MacOS X.])
        AC_MSG_NOTICE([* Using platform pack from src/Platform/MacOSX.])
        LIBS="$LIBS -lobjc -framework OpenGL -framework GLUT -framework ApplicationServices -framework QuickTime -framework Carbon"
        AC_CHECK_HEADERS(OpenGL/gl.h,, AC_MSG_ERROR([Cannot survive without OpenGL]))
        AC_CHECK_HEADERS(OpenGL/glu.h,, AC_MSG_ERROR([Cannot survive without OpenGL and GLU]))
        AC_CHECK_HEADERS(GLUT/glut.h,, AC_MSG_ERROR([Cannot survive without OpenGL and GLUT]))
        CPPFLAGS="$CPPFLAGS -I\${srcdir}/Platform/MacOSX -fpascal-strings"
        AC_LANG(C++)
        ;;
    *)
        if test "x$ac_cv_header_windows_h" = "xyes" ; then
            AC_MSG_NOTICE([* Header windows.h detected.  Assuming target is Windows.])
            AC_MSG_NOTICE([* Using platform pack from src/Platform/win32.])
            AC_CHECK_LIB(opengl32, main,, AC_MSG_ERROR([Cannot survive without OpenGL]))
            AC_CHECK_LIB(glu32, main,, AC_MSG_ERROR([Cannot survive without OpenGL and GLU]))
            AC_CHECK_LIB(glut32, main,, AC_MSG_ERROR([Cannot survive without OpenGL and GLUT]))
            AC_CHECK_LIB(wsock32, main,, AC_MSG_ERROR([Not configured to build without wsock32 library]))
            AC_CHECK_LIB(winmm, main,, AC_MSG_ERROR([Not configured to build without winmm library]))
            AC_CHECK_LIB(iphlpapi, main,, AC_MSG_ERROR([Not configured to build without iphlpapi library]))
            CPPFLAGS="$CPPFLAGS -I\${srcdir}/Platform/win32"
        else
            AC_MSG_NOTICE([* Assuming generic X Windows platform.])
            AC_MSG_NOTICE([* Using platform pack from src/Platform/X11.])

            AC_LANG(C++)

            dnl We need the following for GL to link
            AC_PATH_XTRA
            CPPFLAGS="$CPPFLAGS $X_CFLAGS"
            LDFLAGS="$LDFLAGS -L/usr/local/lib"
            LIBS="$LIBS $X_LIBS $X_PRE_LIBS -lX11 $X_EXTRA_LIBS"
            AC_CHECK_LIB(m, main)
            AC_CHECK_LIB(Xext, main)
            
            AC_ARG_WITH(mesa, [  --with-mesa             Use MesaGL libs instead of GL LIBS], [
dnl Use Mesa
                AC_CHECK_LIB(MesaGL, main,, AC_MSG_ERROR([Cannot find and link MesaGL]))
                AC_CHECK_LIB(MesaGLU, main,, AC_MSG_ERROR([Cannot find and link MesaGLU]))
            ],[
dnl Uee GL
                AC_CHECK_LIB(GL, main,, AC_CHECK_LIB(gl, main,, AC_MSG_ERROR([Cannot find and link GL.  Try --with-mesa])))
                AC_CHECK_LIB(GLU, main,, AC_CHECK_LIB(glu, main,, AC_MSG_ERROR([Cannot find and link GLU])))
            ])

            AC_CHECK_LIB(glut, main,, AC_CHECK_LIB(GLUT, main,, AC_MSG_ERROR([Cannot find and link GLUT])))
            CPPFLAGS="$CPPFLAGS -I\${srcdir}/Platform/X11"
        fi
        AC_CHECK_HEADERS(GL/gl.h,, AC_MSG_ERROR([No GL/gl.h header]))
        AC_CHECK_HEADERS(GL/glu.h,, AC_MSG_ERROR([No GL/glu.h header]))
        AC_CHECK_HEADERS(GL/glut.h,, [AC_CHECK_HEADERS(GLUT/glut.h,, AC_MSG_ERROR([No glut.h header]))])
        ;;
esac


AC_CHECK_LIB(PCRE, main,, AC_CHECK_LIB(pcre, main,, AC_MSG_ERROR([PCRE library not found - home is ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/])))
AC_CHECK_LIB(expat, main,, AC_MSG_ERROR([expat library not found - home is http://expat.sourceforge.net/]))
AC_CHECK_LIB(ungif, main,, AC_MSG_ERROR([libungif library not found - home is ftp://prtr-13.ucsc.edu/pub/libungif/]))
AC_CHECK_LIB(tiff, main,, AC_MSG_ERROR([libtiff library not found - home is http://www.libtiff.org/]))
AC_CHECK_LIB(SDL-1.1, main,, AC_CHECK_LIB(SDL, main,, AC_MSG_ERROR([libSDL library not found - home is http://www.libsdl.org/])))
AC_CHECK_LIB(smpeg, main,, AC_MSG_NOTICE([libsmpeg library not found - mp3 support disabled - home is http://www.lokigames.com/development/]))
AC_CHECK_LIB(ogg, main,, AC_MSG_ERROR([libogg library not found - home is http://www.xiph.org/]))
AC_CHECK_LIB(vorbis, main,, AC_MSG_ERROR([libvorbis library not found - home is http://www.xiph.org/]))
AC_CHECK_LIB(vorbisfile, main,, AC_MSG_ERROR([libvorbisfile library not found - home is http://www.xiph.org/]))
AC_CHECK_LIB(SDL_mixer, main,, AC_MSG_ERROR([libSDL_mixer library not found - home is http://www.libsdl.org/]))
 
dnl Switch to C++ for sstream and valarray
AC_LANG(C++)

dnl Checks for header files
AC_CHECK_HEADERS(sstream,,[
AC_MSG_WARN([sstream not found.  Using copy from distribution])
CPPFLAGS="$CPPFLAGS -I\${srcdir}/Support/gcc-2.95.2"
])

AC_CHECK_HEADERS(valarray,,[
AC_MSG_WARN([valarray not found.  Will fall back to vector])
])

AC_CHECK_HEADERS(unistd.h)
AC_CHECK_HEADERS(sys/wait.h)
AC_CHECK_HEADERS(sys/param.h)
AC_CHECK_HEADERS(sys/types.h)

AC_CHECK_HEADERS(pcre.h,, [AC_CHECK_HEADERS(pcre/pcre.h,, AC_MSG_ERROR([Cannot find pcre.h header]))])
AC_CHECK_HEADERS(expat.h,, [AC_CHECK_HEADERS(expat/expat.h,, AC_MSG_ERROR([Cannot find expat.h header]))])
AC_CHECK_HEADERS(gif_lib.h,, AC_MSG_ERROR([Cannot find gif_lib.h header]))
AC_CHECK_HEADERS(SDL.h,, [AC_CHECK_HEADERS(SDL/SDL.h,, AC_MSG_ERROR([Cannot find SDL.h header]))])
AC_CHECK_HEADERS(SDL_mixer.h,, [AC_CHECK_HEADERS(SDL/SDL_mixer.h,, AC_MSG_ERROR([Cannot find SDL_mixer.h header]))])
AC_CHECK_HEADERS(SDL_main.h,, [AC_CHECK_HEADERS(SDL/SDL_main.h,, AC_MSG_ERROR([Cannot find SDL_main.h header]))])

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_BIGENDIAN

dnl Checks for library functions.
AC_TRY_COMPILE([
#if defined(HAVE_SDL_SDL_MIXER_H)
#include <SDL/SDL_mixer.h>
#else
#if defined(HAVE_SDL_MIXER_H)
#include <SDL_mixer.h>
#else
#include "SDL_mixer.h"
#endif
#endif

#undef main
],[
Mix_ChannelFinished(0)
],
[
AC_DEFINE(HAVE_MIX_CHANNELFINISHED,1,[Define if Mix_ChannelFinished exists in SDL_mixer.h])
],[
AC_MSG_WARN([Old version of SDL_mixer.  End-of-channel events disabled.])
]
)

dnl Check that autogenerated Makefile.ams are there
AC_CHECK_FILE(src,[
AC_CHECK_FILE(src/Makefile.am,,[
AC_MSG_ERROR([src/Makefile.am not present.  Please run autogen.sh])
])

AC_CHECK_FILE(ic2data/Makefile.am,,[
AC_MSG_ERROR([ic2data/Makefile.am not present.  Please run autogen.sh])
])

])

LIBS="$LIBS $SDL_EXTRA_LIBS"

AC_OUTPUT(ic2.spec.mdk ic2.spec.redhat ic2.spec.suse Makefile src/Makefile ic2data/Makefile)
AC_MSG_NOTICE([Verdict was:])
AC_MSG_NOTICE([CPPFLAGS=$CPPFLAGS])
AC_MSG_NOTICE([LDFLAGS=$LDFLAGS])
AC_MSG_NOTICE([LIBS=$LIBS])
