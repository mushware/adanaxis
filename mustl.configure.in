dnl Process this file with autoconf to produce a configure script.
AC_PREREQ(2.52)
AC_INIT(README)
AC_CANONICAL_HOST
AC_CANONICAL_TARGET

MUSTL_MAJOR_VERSION=0
MUSTL_MINOR_VERSION=1
MUSTL_MICRO_VERSION=1
MUSTL_VERSION=$MUSTL_MAJOR_VERSION.$MUSTL_MINOR_VERSION.$MUSTL_MICRO_VERSION
MUSTL_UNDERSCORE_VERSION=${MUSTL_MAJOR_VERSION}_${MUSTL_MINOR_VERSION}_${MUSTL_MICRO_VERSION}

AC_SUBST(MUSTL_MAJOR_VERSION)
AC_SUBST(MUSTL_MINOR_VERSION)
AC_SUBST(MUSTL_MICRO_VERSION)
AC_SUBST(MUSTL_VERSION)
AC_SUBST(MUSTL_UNDERSCORE_VERSION)

AM_INIT_AUTOMAKE(mustl,$MUSTL_VERSION)
TOP_SUBDIRS="src"
AC_SUBST(TOP_SUBDIRS)
AM_CONFIG_HEADER(config.h)

dnl Checks for programs.
AC_PROG_MAKE_SET
AC_PROG_CXX
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_LIBTOOL
AC_PATH_PROG(ac_prog_find, find)

dnl Checks for libraries.
AC_CHECK_HEADER(windows.h)

AC_MSG_NOTICE([****************************************************************])
AC_MSG_NOTICE([*                                                              *])
AC_MSG_NOTICE([* Choosing a platform pack.  Please check that this is correct *])
AC_MSG_NOTICE([*                                                              *])
AC_MSG_NOTICE([****************************************************************])

case "$target" in
    powerpc-apple-darwin*)
        AC_MSG_NOTICE([* Assuming Darwin platform is MacOS X.])
        AC_MSG_NOTICE([* Using platform pack from src/Platform/MacOSX.])
        LIBS="$LIBS -lobjc"
        CPPFLAGS="$CPPFLAGS -I\${srcdir}/Platform/MacOSX -I\${srcdir}/Platform -I\${srcdir}/Mustl -fpascal-strings"
        ;;
    *)
        if test "x$ac_cv_header_windows_h" = "xyes" ; then
            AC_MSG_NOTICE([* Header windows.h detected.  Assuming target is Windows.])
            AC_MSG_NOTICE([* Using platform pack from src/Platform/win32.])
            AC_CHECK_LIB(wsock32, main,, AC_MSG_ERROR([Not configured to build without wsock32 library]))
            CPPFLAGS="$CPPFLAGS -I\${srcdir}/Platform/win32"
        else
            AC_MSG_NOTICE([* Assuming generic X Windows platform.])
            AC_MSG_NOTICE([* Using platform pack from src/Platform/X11.])

            AC_LANG(C++)

            CPPFLAGS="$CPPFLAGS -I\${srcdir}/Platform/X11"
        fi
        ;;
esac

dnl Checks for header files
AC_CHECK_HEADERS(sstream,,[
AC_MSG_WARN([sstream not found.  Using copy from distribution])
CPPFLAGS="$CPPFLAGS -I\${srcdir}/Support/gcc-2.95.2"
])

AC_CHECK_HEADERS(valarray,,[
AC_MSG_WARN([valarray not found.  Will fall back to vector])
])

AC_CHECK_HEADERS(unistd.h)
AC_CHECK_HEADERS(sys/wait.h)
AC_CHECK_HEADERS(sys/param.h)
AC_CHECK_HEADERS(sys/types.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_BIGENDIAN

dnl Check that autogenerated Makefile.ams are there
AC_CHECK_FILE(src,[
AC_CHECK_FILE(src/Makefile.am,,[
AC_MSG_ERROR([src/Makefile.am not present.  Please run autogen.sh])
])
])

AC_OUTPUT(Makefile src/Makefile)
AC_MSG_NOTICE([Verdict was:])
AC_MSG_NOTICE([CPPFLAGS=$CPPFLAGS])
AC_MSG_NOTICE([LDFLAGS=$LDFLAGS])
AC_MSG_NOTICE([LIBS=$LIBS])
