%{
/*
 * $Id: CoreBison.y,v 1.6 2002/05/10 16:39:39 southa Exp $
 *
 * Autogenerated by bison
 */
#include "CoreBison.h"
#include "CoreCommand.h"
    
#define YYSTYPE CoreScalar
#define YYPARSE_PARAM inBison
#define YYLEX_PARAM inBison
#define INBISON (static_cast<CoreBison *>(inBison))
#define CoreBison_lex INBISON->Lex
#define YYDEBUG 1
#define YYERROR_VERBOSE 1
    
int yyerror( char *s);
%}

%pure_parser
%token NUM
%token URL
%token VARIABLE
%token PIPER
%token IDENTIFIER
%token STRING
%token UNQUOTED_STRING
%token EOS
%token END_OF_FILE

%% /* Grammar rules and actions follow */

input:    /* empty */
| input statement;
end: EOS
| END_OF_FILE
;
command: IDENTIFIER {
    INBISON->ClearParams();
}
;
pipe: source PIPER destination
;
source: URL
| pipe
| VARIABLE
;
destination: VARIABLE
| filename
| command parameter
;
any_string: STRING
| UNQUOTED_STRING
| IDENTIFIER
;
parameter: any_string {
    INBISON->PushParam($1);
}
;
parameter_list: parameter
| parameter_list parameter
;
filename: parameter
;
statement: end
| command end {
    $$=INBISON->Despatch($1);
} 
| command parameter_list end {
    $$=INBISON->Despatch($1);
}
| pipe end {
    cerr << "Found pipe " << $1 << endl;
}
;
%%

int yyerror(char *s)
{
    cerr << "Bison error: " << s << endl;
    return 0;
}

int
CoreBison::Parse(CoreCommand& inCommand)
{
    m_command=&inCommand;
    return yyparse(this);
}

void
CoreBison::PushParam(CoreScalar& inParam)
{
    m_command->PushParam(inParam);
}

void
CoreBison::ClearParams(void)
{
    m_command->ClearParams();
}

CoreScalar 
CoreBison::Despatch(CoreScalar& inName)
{
    string name;
    inName.Get(name);
    m_command->NameSet(name);
    return m_command->Despatch();
}

