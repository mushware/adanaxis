%{
/*
 * $Id: CoreBison.y,v 1.1 2002/03/02 20:35:07 southa Exp $
 *
 * Autogenerated by bison
 */
#include "CoreBison.hp"
    
#define YYSTYPE CoreScalar
#define YYPARSE_PARAM inBison
#define YYLEX_PARAM inBison
#define INBISON (static_cast<CoreBison *>(inBison))
#define CoreBison_lex INBISON->Lex
#define YYDEBUG 1
#define YYERROR_VERBOSE 1
    
int yyerror( char *s);
%}

%pure_parser
%token NUM

%token IDENTIFIER
%token STRING
%token EOS

%% /* Grammar rules and actions follow */

input:    /* empty */
| input statement;
end: EOS
;
command: IDENTIFIER
;
parameter: STRING
| IDENTIFIER
;
statement: end
| command end { $$=INBISON->Despatch($1); } 
| command parameter end { $$=INBISON->Despatch($1, $2); }
;
%%

int yyerror(char *s)
{
        cerr << "Bison error: " << s << endl;
        return 0;
}

void
CoreBison::Parse(void)
{
    yyparse(this);
}

CoreScalar
CoreBison::Despatch(CoreScalar& inCommand)
{
    cerr << "Command was '" << inCommand << "'" << endl;
    return CoreScalar(0);
}


CoreScalar
CoreBison::Despatch(CoreScalar& inCommand, CoreScalar& inParam)
{
    cerr << "Command was '" << inCommand << ", " << inParam << "'" << endl;
    return CoreScalar(0);
}
