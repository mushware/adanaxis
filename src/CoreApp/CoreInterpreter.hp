/*
 * $Id$
 * $Log$
 */

#include "CoreStandard.hp"
#include "CoreEnv.hp"
#include "CoreCommand.hp"

class CommandHandler;

class CoreInterpreter
{
public:
    
    CoreInterpreter() {m_envs.push_back(CoreEnv());}
    virtual ~CoreInterpreter() {}

    static CoreInterpreter& Instance(void) {return *((m_instance==NULL)?m_instance=new CoreInterpreter:m_instance);}
    
    virtual void Execute(const string& inStr);
    virtual void AddHandler(CommandHandler& inHandler);
    
private:
    virtual void ExecuteSub(const string& inStr);
    vector<CoreEnv> m_envs;
    vector<CommandHandler *> m_handlers;
    static CoreInterpreter *m_instance;
};
