dnl Process this file with autoconf to produce a configure script.
AC_INIT()
AC_CANONICAL_SYSTEM

AM_INIT_AUTOMAKE(contractor, 0.0)
TOP_SUBDIRS="src"
AC_SUBST(TOP_SUBDIRS)
prefix='${top_srcdir}/contractor'
exec_prefix='${prefix}'
bindir='${exec_prefix}/system'
AC_MSG_NOTICE([exec_prefix=${exec_prefix}])
AC_MSG_NOTICE([bindir=${bindir}])
AM_CONFIG_HEADER(config.h)

dnl Checks for programs.
AC_PROG_MAKE_SET
AC_PROG_CXX
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PATH_PROG(ac_prog_find, find)

dnl Checks for libraries.
AC_CHECK_HEADER(windows.h)

AC_MSG_NOTICE([****************************************************************])
AC_MSG_NOTICE([*                                                              *])
AC_MSG_NOTICE([* Choosing a platform pack.  Please check that this is correct *])
AC_MSG_NOTICE([*                                                              *])
AC_MSG_NOTICE([****************************************************************])

dnl Get GL
case "$target" in
    powerpc-apple-darwin*)
        AC_MSG_NOTICE([* Assuming Darwin platform is MacOS X.])
        AC_MSG_NOTICE([* Using platform pack from src/Platform/MacOSX.])
        LIBS="$LIBS -lobjc -framework OpenGL -framework GLUT -framework ApplicationServices -framework QuickTime"
        AC_CHECK_HEADERS(OpenGL/gl.h,, AC_MSG_ERROR([Cannot survive without OpenGL]))
        AC_CHECK_HEADERS(OpenGL/glu.h,, AC_MSG_ERROR([Cannot survive without OpenGL and GLU]))
        AC_CHECK_HEADERS(GLUT/glut.h,, AC_MSG_ERROR([Cannot survive without OpenGL and GLUT]))
        CPPFLAGS="$CPPFLAGS -IPlatform/MacOSX"
        ;;
    *)
        if test "x$ac_cv_header_windows_h" = "xyes" ; then
            AC_MSG_NOTICE([* Header windows.h detected.  Assuming target is Windows.])
            AC_MSG_NOTICE([* Using platform pack from src/Platform/win32.])
            AC_CHECK_LIB(opengl32, main,, AC_MSG_ERROR([Cannot survive without OpenGL]))
            AC_CHECK_LIB(glu32, main,, AC_MSG_ERROR([Cannot survive without OpenGL and GLU]))
            AC_CHECK_LIB(glut32, main,, AC_MSG_ERROR([Cannot survive without OpenGL and GLUT]))
            CPPFLAGS="$CPPFLAGS -IPlatform/win32"
        else
            AC_MSG_NOTICE([* Assuming generic X Windows platform.])
            AC_MSG_NOTICE([* Using platform pack from src/Platform/X11.])
            AC_PATH_XTRA
            AC_CHECK_LIB(gl, main,, AC_CHECK_LIB(GL, main,, AC_MSG_ERROR([Cannot survive without OpenGL])))
            AC_CHECK_LIB(glu, main,, AC_CHECK_LIB(GLU, main,, AC_MSG_ERROR([Cannot survive without OpenGL and GLU])))
            AC_CHECK_LIB(glut, main,, AC_CHECK_LIB(GLUT, main,, AC_MSG_ERROR([Cannot survive without OpenGL and GLUT])))
            CPPFLAGS="$CPPFLAGS -IPlatform/X11"
        fi
        AC_CHECK_HEADERS(GL/gl.h,, AC_MSG_ERROR([No GL/gl.h header]))
        AC_CHECK_HEADERS(GL/glu.h,, AC_MSG_ERROR([No GL/glu.h header]))
        AC_CHECK_HEADERS(GL/glut.h,, [AC_CHECK_HEADERS(GLUT/glut.h,, AC_MSG_ERROR([No glut.h header]))])
        ;;
esac


AC_CHECK_LIB(PCRE, main,, AC_MSG_ERROR([PCRE library not found - try ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/]))
AC_CHECK_LIB(expat, main,, AC_MSG_ERROR([expat library not found - try http://expat.sourceforge.net/]))
AC_CHECK_LIB(ungif, main,, AC_MSG_ERROR([libungif library not found - try ftp://prtr-13.ucsc.edu/pub/libungif/]))
AC_CHECK_LIB(tiff, main,, AC_MSG_ERROR([libtiff library not found - try http://www.libtiff.org/]))
AC_CHECK_LIB(smpeg, main,, AC_MSG_ERROR([libsmpeg library not found - try http://www.lokigames.com/development/]))
AC_CHECK_LIB(SDL, main,, AC_MSG_ERROR([libSDL library not found - try http://www.libsdl.org/]))
AC_CHECK_LIB(SDL_mixer, main,, AC_MSG_ERROR([libSDL_mixer library not found - try http://www.libsdl.org/]))
AC_CHECK_LIB(ogg, main,, AC_MSG_ERROR([libogg library not found - try http://www.xiph.org/]))
AC_CHECK_LIB(vorbis, main,, AC_MSG_ERROR([libvorbis library not found - try http://www.xiph.org/]))
AC_CHECK_LIB(vorbisfile, main,, AC_MSG_ERROR([libvorbisfile library not found - try http://www.xiph.org/]))

dnl Checks for header files
AC_CHECK_HEADERS(sstream,,[
AC_MSG_WARN([sstream not found.  Using copy from distribution])
CPPFLAGS="$CPPFLAGS -ISupport/gcc-2.95.2"
])

AC_CHECK_HEADERS(SDL.h,, [AC_CHECK_HEADERS(SDL/SDL.h,, AC_MSG_ERROR([Cannot find SDL.h header]))])
AC_CHECK_HEADERS(SDL_mixer.h,, [AC_CHECK_HEADERS(SDL/SDL_mixer.h,, AC_MSG_ERROR([Cannot find SDL_mixer.h header]))])

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_BIGENDIAN

dnl Checks for library functions.

dnl Automatically generate src/makefile.am if it's not there
AC_CHECK_FILE(src/Makefile.am,,[
echo Building src/Makefile.am
cd src
echo 'bin_PROGRAMS=contractor' > Makefile.am
echo -n 'contractor_SOURCES=' >> Makefile.am
$ac_prog_find . -path './Platform/*/*' -prune -o -name '*.cpp' -exec echo $ECHO_N " " {} \;  >> Makefile.am
$ac_prog_find . -path './Platform/*/*' -prune -o -name '*.h' -exec echo $ECHO_N " " {} \;  >> Makefile.am
$ac_prog_find . -path './Platform/*/*' -prune -o -name 'sstream' -exec echo $ECHO_N " " {} \; >> Makefile.am
echo >> Makefile.am
echo INCLUDES=-IAPI >> Makefile.am
cd ..
])
AC_OUTPUT(Makefile src/Makefile)
